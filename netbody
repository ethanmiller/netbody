#!/usr/bin/env python
from makefont import create_cairo_font_face_for_file
import cairo, util, collection

class Manager:
	def __init__(self):
		self.surface = cairo.ImageSurface(cairo.FORMAT_ARGB32, util.CONST.WIN_WIDTH, util.CONST.WIN_HEIGHT)
		self.ctx = cairo.Context(self.surface)
		self.ctx.set_font_face(create_cairo_font_face_for_file("resources/Inconsolata.otf"))
		self.ctx.set_font_size(24)
	
	def draw(self):
		n = 0
		while True:
			try:
				self.ctx.set_source_rgb(0, 0, 0) # clear to black
				self.ctx.paint()

				has_active = False
				for e in collection.entities:
					if not has_active and e.active: has_active = True
					e.draw()

				if not has_active:
					# active nodes have finished drawing, spider again with seed
					collection.spider()

				if util.CONST.SAVE_FRAMES:
					self.surface.write_to_png("output/frame%05d.png" % n)
					n = n + 1

			except KeyboardInterrupt:
				print "ok, done"
				break

if __name__ == '__main__':
	mgr = Manager()
	mgr.draw()
